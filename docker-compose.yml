version: "3.8"

volumes:
  n8n_storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /root/docker/n8n
  redis_storage:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /root/docker/redis

x-shared: &shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
    - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
    - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
  links:
    - redis
  volumes:
    - n8n_storage:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - 443:443
      - 80:80
    volumes:
      - /root/nginx/conf.d:/etc/nginx/conf.d:ro
      - /root/certs/n8n.crt:/etc/nginx/certs/n8n.crt:ro
      - /root/certs/n8n.key:/etc/nginx/certs/n8n.key:ro
    depends_on:
      - n8n
    restart: always

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_storage:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *shared
    ports:
      - 5678:5678

  n8n-worker:
    <<: *shared
    command: worker
    depends_on:
      - n8n
